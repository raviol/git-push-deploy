---
type: update
id: git-push-deploy
name: Git-Push-Deploy Add-On
homepage: https://jelastic.com/blog/git-push-deploy-to-containers/
baseUrl: https://raw.githubusercontent.com/raviol/git-push-deploy/master
description:
  text: /text/description.md
  short: Simple CI/CD pipeline for Git projects.
logo: https://raw.githubusercontent.com/jelastic-jps/git-push-deploy/master/images/ci-cd-icon.png

targetNodes:
  nodeType:
  - apache
  - apache2
  - apache2-ruby
  - apache2-python
  - glassfish
  - glassfish3
  - glassfish4
  - golang
  - javaengine
  - jboss7
  - jetty6
  - jetty8
  - jetty9
  - nginxphp-dockerized
  - nginxphp
  - nginx-ruby
  - nodejs
  - payara
  - springboot
  - tomcat
  - tomcat7
  - tomcat85
  - tomcat6
  - tomcat9
  - tomee-dockerized
  - tomee
  - wildfly10
  - wildfly11
  - wildfly
  - wildfly9
  - wildfly-auto-cluster
  
settings:
  fields:
  - name: gitRepo
    caption: Git Repo Url
    type: string
    default: ''
    required: 'true'
    regex: "^https?:\\/\\/.+$"
    regexText: Incorrect URL. HTTPS link to Git repository is required.
  - name: gitBranch
    caption: Branch
    type: string
    default: master
    required: 'true'
  - name: gitUser
    caption: User
    type: string
    default: ''
    required: 'true'
  - name: gitToken
    caption: Token
    type: string
    default: ''
    required: 'true'
  - name: deployType
    type: hidden
    values:
      native: Certified containers - deployment via API
      custom: Custom containers - deployment via volume mount + restart
    showIf:
      custom:
      - name: deployPathCustom
        caption: Mount Path
        type: string
        default: "/opt/payara/deployments"
    default: native
    required: 'true'

onInstall:
  script: /scripts/check-deployment-type.cs?_r=${fn.random}
  next: jps
  
actions:
  jps:
    - api: env.control.GetEnvInfo
      envName: ${env.envName}
    - install:
        envGroups: ${response.envGroups}
        envName: ${this.envName}
        jps: /addons/${this.addon}.jps?_r=${fn.random}
        settings:
          gitUser: ${settings.gitUser}
          gitRepo: ${settings.gitRepo}
          gitToken: ${settings.gitToken}
          gitBranch: ${settings.gitBranch}
          deployType: ${settings.deployType}
          targetEnv: ${env.envName}
          basePath: ${settings.path}
          type: ${this.type}
        region: ${env.hardwareNodeGroup}
success: /text/success.md
